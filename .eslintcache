[{"/Users/angelsworkstation/Desktop/ecommerce/frontend/src/screens/HomeScreen.js":"1","/Users/angelsworkstation/Desktop/ecommerce/frontend/src/actions/productActions.js":"2","/Users/angelsworkstation/Desktop/ecommerce/frontend/src/components/Loader.js":"3","/Users/angelsworkstation/Desktop/ecommerce/frontend/src/constants/productConstants.js":"4","/Users/angelsworkstation/Desktop/ecommerce/frontend/src/reducers/productReducers.js":"5","/Users/angelsworkstation/Desktop/ecommerce/frontend/src/store.js":"6","/Users/angelsworkstation/Desktop/ecommerce/frontend/src/screens/ProductScreen.js":"7","/Users/angelsworkstation/Desktop/ecommerce/frontend/src/App.js":"8","/Users/angelsworkstation/Desktop/ecommerce/frontend/src/components/Header.js":"9","/Users/angelsworkstation/Desktop/ecommerce/frontend/src/components/Rating.js":"10"},{"size":1032,"mtime":1612572929733,"results":"11","hashOfConfig":"12"},{"size":1276,"mtime":1612590855198,"results":"13","hashOfConfig":"12"},{"size":340,"mtime":1612572771435,"results":"14","hashOfConfig":"12"},{"size":361,"mtime":1612588786428,"results":"15","hashOfConfig":"12"},{"size":1076,"mtime":1612590455708,"results":"16","hashOfConfig":"12"},{"size":547,"mtime":1612589810408,"results":"17","hashOfConfig":"12"},{"size":3719,"mtime":1612645770968,"results":"18","hashOfConfig":"12"},{"size":620,"mtime":1612589443921,"results":"19","hashOfConfig":"12"},{"size":1039,"mtime":1612231666101,"results":"20","hashOfConfig":"12"},{"size":1897,"mtime":1612223808902,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"3oohke",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/angelsworkstation/Desktop/ecommerce/frontend/src/screens/HomeScreen.js",["46"],"import React, { useState, useEffect } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listProducts } from \"../actions/productActions\";\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { error, loading, products } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Row>\n          {products.map((product) => (\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n              <Product product={product} />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </div>\n  );\n};\n\nexport default HomeScreen;\n",["47","48"],"/Users/angelsworkstation/Desktop/ecommerce/frontend/src/actions/productActions.js",[],"/Users/angelsworkstation/Desktop/ecommerce/frontend/src/components/Loader.js",[],["49","50"],"/Users/angelsworkstation/Desktop/ecommerce/frontend/src/constants/productConstants.js",[],"/Users/angelsworkstation/Desktop/ecommerce/frontend/src/reducers/productReducers.js",[],"/Users/angelsworkstation/Desktop/ecommerce/frontend/src/store.js",[],"/Users/angelsworkstation/Desktop/ecommerce/frontend/src/screens/ProductScreen.js",["51","52","53"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { listProductDetails } from \"../actions/productActions\";\n\nconst ProductScreen = ({ match, history}) => {\n    const [qty, setQty] = useState(1)\n\n\n  const dispatch = useDispatch()\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id))\n\n}, [])\n\nconst addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n}\n\n  return (\n    <div>\n      <Link to=\"/\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Row>\n          <Col md={6}>\n            <Image src={product.image} alt={product.name} fluid />\n          </Col>\n\n          <Col md={3}>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h3>{product.name}</h3>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Rating\n                  value={product.rating}\n                  text={`${product.numReviews} reviews`}\n                  color={\"#f8e825\"}\n                />\n              </ListGroup.Item>\n\n              <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n\n              <ListGroup.Item>\n                Description: {product.description}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n\n          <Col md={3}>\n            <ListGroup>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Price:</Col>\n                  <Col>\n                    <strong>${product.price}</strong>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Status</Col>\n                  <Col>\n                    {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n\n              {product.countInStock > 0 && (\n                  <ListGroup.Item>\n                      <Row>\n                          <Col>Qty</Col>\n                          <Col xs='auto' className='my-1'>\n                            <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\n                                {\n                                    [...Array(product.countInStock).keys()].map((x) => (\n                                        <option key={x + 1} value={x + 1}>\n                                            {x + 1}\n                                        </option>\n                                    ))\n                                }\n                            </Form.Control>\n                          </Col>\n                      </Row>\n                  </ListGroup.Item>\n              )}\n\n              <ListGroup.Item>\n                <Button\n                    onClick={addToCartHandler}\n                  className=\"btn-block\"\n                  disabled={product.countInStock == 0}\n                  type=\"button\"\n                >\n                  Add to Cart\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n\n          <Col md={3}></Col>\n        </Row>\n      )}\n    </div>\n  );\n};\n\nexport default ProductScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/frontend/src/App.js",[],"/Users/angelsworkstation/Desktop/ecommerce/frontend/src/components/Header.js",["54"],"/Users/angelsworkstation/Desktop/ecommerce/frontend/src/components/Rating.js",[],{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":25},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"59","replacedBy":"63"},{"ruleId":"61","replacedBy":"64"},{"ruleId":"55","severity":1,"message":"65","line":4,"column":46,"nodeType":"57","messageId":"58","endLine":4,"endColumn":50},{"ruleId":"66","severity":1,"message":"67","line":21,"column":4,"nodeType":"68","endLine":21,"endColumn":6,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":107,"column":50,"nodeType":"72","messageId":"73","endLine":107,"endColumn":52},{"ruleId":"55","severity":1,"message":"74","line":2,"column":34,"nodeType":"57","messageId":"58","endLine":2,"endColumn":37},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["75"],"no-negated-in-lhs",["76"],["75"],["76"],"'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["77"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Row' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"80","text":"81"},[743,745],"[dispatch, match.params.id]"]