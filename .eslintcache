[{"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/index.js":"1","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/App.js":"2","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/store.js":"3","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reportWebVitals.js":"4","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Header.js":"5","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Footer.js":"6","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/ProductScreen.js":"7","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/HomeScreen.js":"8","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/CartScreen.js":"9","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/LoginScreen.js":"10","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/RegisterScreen.js":"11","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/ProfileScreen.js":"12","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reducers/productReducers.js":"13","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reducers/cartReducers.js":"14","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reducers/userReducers.js":"15","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Product.js":"16","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Loader.js":"17","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Message.js":"18","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Rating.js":"19","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/FormContainer.js":"20","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/actions/userActions.js":"21","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/actions/productActions.js":"22","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/actions/cartActions.js":"23","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/constants/productConstants.js":"24","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/constants/userConstants.js":"25","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/constants/cartConstants.js":"26","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/ShippingScreen.js":"27","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/CheckoutSteps.js":"28","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/PaymentScreen.js":"29","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/PlaceOrderScreen.js":"30","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reducers/orderReducers.js":"31","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/constants/orderConstants.js":"32","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/actions/orderActions.js":"33"},{"size":594,"mtime":1612566845853,"results":"34","hashOfConfig":"35"},{"size":1420,"mtime":1613083250917,"results":"36","hashOfConfig":"35"},{"size":1553,"mtime":1613162961279,"results":"37","hashOfConfig":"35"},{"size":362,"mtime":1612216946663,"results":"38","hashOfConfig":"35"},{"size":1796,"mtime":1613003211971,"results":"39","hashOfConfig":"35"},{"size":361,"mtime":1612219301001,"results":"40","hashOfConfig":"35"},{"size":3719,"mtime":1612645770968,"results":"41","hashOfConfig":"35"},{"size":1032,"mtime":1612656409222,"results":"42","hashOfConfig":"35"},{"size":3451,"mtime":1612823611057,"results":"43","hashOfConfig":"35"},{"size":2207,"mtime":1612993949593,"results":"44","hashOfConfig":"35"},{"size":3223,"mtime":1613004515086,"results":"45","hashOfConfig":"35"},{"size":3680,"mtime":1613030253954,"results":"46","hashOfConfig":"35"},{"size":1076,"mtime":1612590455708,"results":"47","hashOfConfig":"35"},{"size":1273,"mtime":1613169550486,"results":"48","hashOfConfig":"35"},{"size":2334,"mtime":1613076811878,"results":"49","hashOfConfig":"35"},{"size":851,"mtime":1612231402255,"results":"50","hashOfConfig":"35"},{"size":340,"mtime":1612572771435,"results":"51","hashOfConfig":"35"},{"size":230,"mtime":1612572874147,"results":"52","hashOfConfig":"35"},{"size":1897,"mtime":1612223808902,"results":"53","hashOfConfig":"35"},{"size":382,"mtime":1612992834920,"results":"54","hashOfConfig":"35"},{"size":4429,"mtime":1613076864141,"results":"55","hashOfConfig":"35"},{"size":1272,"mtime":1612991118713,"results":"56","hashOfConfig":"35"},{"size":1235,"mtime":1613082202215,"results":"57","hashOfConfig":"35"},{"size":361,"mtime":1612588786428,"results":"58","hashOfConfig":"35"},{"size":904,"mtime":1613076740704,"results":"59","hashOfConfig":"35"},{"size":287,"mtime":1613169371430,"results":"60","hashOfConfig":"35"},{"size":2612,"mtime":1613079949784,"results":"61","hashOfConfig":"35"},{"size":1600,"mtime":1613079850254,"results":"62","hashOfConfig":"35"},{"size":1493,"mtime":1613082316892,"results":"63","hashOfConfig":"35"},{"size":5112,"mtime":1613169277886,"results":"64","hashOfConfig":"35"},{"size":772,"mtime":1613169213840,"results":"65","hashOfConfig":"35"},{"size":230,"mtime":1613169198630,"results":"66","hashOfConfig":"35"},{"size":1272,"mtime":1613169458528,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"5wie1c",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/index.js",[],["144","145"],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/App.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/store.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reportWebVitals.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Header.js",["146"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navbar, Nav, Container, Row, NavDropdown } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { logout } from '../actions/userActions'\n\nconst Header = () => {\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const dispatch = useDispatch()\n\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <header>\n      <Navbar bg=\"light\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>Ale's Creations</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i>Cart\n                </Nav.Link>\n              </LinkContainer>\n\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i>Login\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Footer.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/ProductScreen.js",["147","148","149"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { listProductDetails } from \"../actions/productActions\";\n\nconst ProductScreen = ({ match, history}) => {\n    const [qty, setQty] = useState(1)\n\n\n  const dispatch = useDispatch()\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id))\n\n}, [])\n\nconst addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n}\n\n  return (\n    <div>\n      <Link to=\"/\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Row>\n          <Col md={6}>\n            <Image src={product.image} alt={product.name} fluid />\n          </Col>\n\n          <Col md={3}>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h3>{product.name}</h3>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Rating\n                  value={product.rating}\n                  text={`${product.numReviews} reviews`}\n                  color={\"#f8e825\"}\n                />\n              </ListGroup.Item>\n\n              <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n\n              <ListGroup.Item>\n                Description: {product.description}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n\n          <Col md={3}>\n            <ListGroup>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Price:</Col>\n                  <Col>\n                    <strong>${product.price}</strong>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Status</Col>\n                  <Col>\n                    {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n\n              {product.countInStock > 0 && (\n                  <ListGroup.Item>\n                      <Row>\n                          <Col>Qty</Col>\n                          <Col xs='auto' className='my-1'>\n                            <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\n                                {\n                                    [...Array(product.countInStock).keys()].map((x) => (\n                                        <option key={x + 1} value={x + 1}>\n                                            {x + 1}\n                                        </option>\n                                    ))\n                                }\n                            </Form.Control>\n                          </Col>\n                      </Row>\n                  </ListGroup.Item>\n              )}\n\n              <ListGroup.Item>\n                <Button\n                    onClick={addToCartHandler}\n                  className=\"btn-block\"\n                  disabled={product.countInStock == 0}\n                  type=\"button\"\n                >\n                  Add to Cart\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n\n          <Col md={3}></Col>\n        </Row>\n      )}\n    </div>\n  );\n};\n\nexport default ProductScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/HomeScreen.js",["150"],"import React, { useState, useEffect } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listProducts } from \"../actions/productActions\";\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { error, loading, products } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Row>\n          {products.map((product) => (\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n              <Product product={product} />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </div>\n  );\n};\n\nexport default HomeScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/CartScreen.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/LoginScreen.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/RegisterScreen.js",["151"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { register } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { error, loading, userInfo } = userRegister;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if(password != confirmPassword) {\n        setMessage('Passwords do not match')\n    } else {\n        dispatch(register(name, email, password));\n    }\n\n  };\n\n  return (\n    <FormContainer>\n      <h1>Register</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n\n      <Form onSubmit={submitHandler}>\n\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            required\n            type=\"name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            required\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            required\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"passwordConfirm\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            required\n            type=\"password\"\n            placeholder=\"Confirm password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n                <Col>\n                    Have an account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Log In</Link>\n                </Col>\n            </Row>\n    </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/ProfileScreen.js",["152","153"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\n\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nconst ProfileScreen = ({ history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error, loading, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n \n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || !user.name || success) {\n          dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        dispatch(getUserDetails(\"profile\"));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      setMessage(\"Passwords do not match\")\n    } else {\n      dispatch(updateUserProfile({\n          'id': user._id,\n          'name': name,\n          'email': email,\n          'password': password,\n        }))\n        setMessage('')\n    }\n  };\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {loading && <Loader />}\n\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              required\n              type=\"name\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"passwordConfirm\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reducers/productReducers.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reducers/cartReducers.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reducers/userReducers.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Product.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Loader.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Message.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Rating.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/FormContainer.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/actions/userActions.js",["154"],"import axios from 'axios'\nimport { \n    USER_LOGIN_REQUEST, \n    USER_LOGIN_SUCCESS, \n    USER_LOGIN_FAIL, \n\n    USER_REGISTER_REQUEST, \n    USER_REGISTER_SUCCESS, \n    USER_REGISTER_FAIL, \n\n    USER_DETAILS_REQUEST, \n    USER_DETAILS_SUCCESS, \n    USER_DETAILS_FAIL, \n    USER_DETAILS_RESET, \n\n    USER_UPDATE_PROFILE_REQUEST, \n    USER_UPDATE_PROFILE_SUCCESS, \n    USER_UPDATE_PROFILE_FAIL, \n    USER_UPDATE_PROFILE_RESET, \n\n    USER_LOGOUT, \n} from '../constants/userConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n            )\n\n            dispatch({\n                type: USER_LOGIN_SUCCESS,    \n                payload: data\n            })\n\n            localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error) {\n        dispatch({ \n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n            ? error.response.data.detail : error.message\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n}\n\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n            )\n\n            dispatch({\n                type: USER_REGISTER_SUCCESS,    \n                payload: data\n            })\n\n            dispatch({\n                type: USER_LOGIN_SUCCESS,    \n                payload: data\n            })\n\n            localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error) {\n        dispatch({ \n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n            ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n            )\n\n            dispatch({\n                type: USER_DETAILS_SUCCESS,    \n                payload: data\n            })\n\n    }catch(error) {\n        dispatch({ \n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n            ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n            )\n\n            dispatch({\n                type: USER_UPDATE_PROFILE_SUCCESS,    \n                payload: data\n            })\n\n            dispatch({\n                type: USER_LOGIN_SUCCESS,    \n                payload: data\n            })\n\n            localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error) {\n        dispatch({ \n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n            ? error.response.data.detail : error.message\n        })\n    }\n}","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/actions/productActions.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/actions/cartActions.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/constants/productConstants.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/constants/userConstants.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/constants/cartConstants.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/ShippingScreen.js",["155"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const dispatch = useDispatch()\n \n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  \n\n  const submitHandler = (e) => {\n      e.preventDefault();\n      dispatch(saveShippingAddress({ address, city, postalCode, country }))\n      history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2/>\n      <Form onSubmit={submitHandler}>\n        <h1>Shipping</h1>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter address\"\n            value={address ? address : '' }\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter city\"\n            value={city ? city : '' }\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"postalCode\">\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter postal code\"\n            value={postalCode ? postalCode : '' }\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter country\"\n            value={country ? country : '' }\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n\n        <Button type='submit' variant='primary'>\n            Continue\n        </Button>\n\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ShippingScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/CheckoutSteps.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/PaymentScreen.js",["156"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const dispatch = useDispatch();\n\n  const [paymentMethod, setPaymentMethod] = useState(\"Paypal\");\n\n  if (!shippingAddress.address) {\n    history.push(\"/shipping\");\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n        <Form onSubmit={submitHandler}>\n          <Form.Group>\n            <Form.Label as=\"legend\">Select Method</Form.Label>\n\n            <Col>\n              <Form.Check\n                type=\"radio\"\n                label=\"Paypal or Credit Card\"\n                id=\"paypal\"\n                name=\"paymentMethod\"\n                checked\n                onChange={(e) => setPaymentMethod(e.target.value)}\n              ></Form.Check>\n            </Col>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Continue\n          </Button>\n        </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/PlaceOrderScreen.js",["157","158"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { createOrder } from \"../actions/orderActions\";\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, error, success } = orderCreate;\n\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n\n  cart.itemsPrice = cart.cartItems\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\n    .toFixed(2);\n  cart.shippingPrice = cart.itemsPrice > 30 ? 0 : 5.99;\n  cart.taxPrice = Number(0.1 * cart.itemsPrice).toFixed(2);\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2);\n  \n  if(!cart.paymentMethod){\n    history.push('/payment')\n  }\n\n  useEffect(() => {\n      if(success) {\n          history.push(`/order/${order._id}`)\n          dispatch({ type: ORDER_CREATE_RESET })\n      }\n  }, [success, history])\n\n  const placeOrder = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Shipping: </strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}\n                {\"   \"}\n                {cart.shippingAddress.postalCode},{\"   \"}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {cart.paymentMethod}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message variant=\"info\">Your cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={2}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col md={2}>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} X ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup.Item variant=\"flush\">\n              <h2>Order Summary</h2>\n            </ListGroup.Item>\n\n            <ListGroup.Item variant=\"flush\">\n              <Row>\n                <Col>Items:</Col>\n                <Col>${cart.itemsPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item variant=\"flush\">\n              <Row>\n                <Col>Shipping:</Col>\n                <Col>${cart.shippingPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item variant=\"flush\">\n              <Row>\n                <Col>Tax:</Col>\n                <Col>${cart.taxPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item variant=\"flush\">\n              <Row>\n                <Col>Total:</Col>\n                <Col>${cart.totalPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <Button\n                type=\"submit\"\n                className=\"btn-block\"\n                disable={cart.cartItems === 0}\n                onClick={placeOrder}\n              >\n                Place Order\n              </Button>\n            </ListGroup.Item>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default PlaceOrderScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reducers/orderReducers.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/constants/orderConstants.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/actions/orderActions.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":3,"column":34,"nodeType":"165","messageId":"166","endLine":3,"endColumn":37},{"ruleId":"163","severity":1,"message":"167","line":4,"column":46,"nodeType":"165","messageId":"166","endLine":4,"endColumn":50},{"ruleId":"168","severity":1,"message":"169","line":21,"column":4,"nodeType":"170","endLine":21,"endColumn":6,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":107,"column":50,"nodeType":"174","messageId":"175","endLine":107,"endColumn":52},{"ruleId":"163","severity":1,"message":"176","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"172","severity":1,"message":"177","line":33,"column":17,"nodeType":"174","messageId":"175","endLine":33,"endColumn":19},{"ruleId":"163","severity":1,"message":"178","line":2,"column":10,"nodeType":"165","messageId":"166","endLine":2,"endColumn":14},{"ruleId":"172","severity":1,"message":"177","line":46,"column":18,"nodeType":"174","messageId":"175","endLine":46,"endColumn":20},{"ruleId":"163","severity":1,"message":"179","line":19,"column":5,"nodeType":"165","messageId":"166","endLine":19,"endColumn":30},{"ruleId":"163","severity":1,"message":"180","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"180","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"176","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"168","severity":1,"message":"181","line":37,"column":6,"nodeType":"170","endLine":37,"endColumn":24,"suggestions":"182"},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["185"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","Expected '!==' and instead saw '!='.","'Link' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["186"],"no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"191","text":"192"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"193","text":"194"},[743,745],"[dispatch, match.params.id]",[1259,1277],"[success, history, order._id, dispatch]"]