[{"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/index.js":"1","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/App.js":"2","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/store.js":"3","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reportWebVitals.js":"4","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Header.js":"5","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Footer.js":"6","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/ProductScreen.js":"7","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/HomeScreen.js":"8","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/CartScreen.js":"9","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/LoginScreen.js":"10","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/RegisterScreen.js":"11","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/ProfileScreen.js":"12","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reducers/productReducers.js":"13","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reducers/cartReducers.js":"14","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reducers/userReducers.js":"15","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Product.js":"16","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Loader.js":"17","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Message.js":"18","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Rating.js":"19","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/FormContainer.js":"20","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/actions/userActions.js":"21","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/actions/productActions.js":"22","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/actions/cartActions.js":"23","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/constants/productConstants.js":"24","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/constants/userConstants.js":"25","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/constants/cartConstants.js":"26","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/ShippingScreen.js":"27","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/CheckoutSteps.js":"28","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/PaymentScreen.js":"29","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/PlaceOrderScreen.js":"30","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reducers/orderReducers.js":"31","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/constants/orderConstants.js":"32","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/actions/orderActions.js":"33","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/OrderScreen.js":"34","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/UserListScreen.js":"35","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/UserEditScreen.js":"36","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/ProductListScreen.js":"37","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/ProductEditScreen.js":"38","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/OrderListScreen.js":"39","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/SearchBox.js":"40","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Paginate.js":"41"},{"size":594,"mtime":1612566845853,"results":"42","hashOfConfig":"43"},{"size":2188,"mtime":1613525276166,"results":"44","hashOfConfig":"43"},{"size":2257,"mtime":1613529297968,"results":"45","hashOfConfig":"43"},{"size":362,"mtime":1612216946663,"results":"46","hashOfConfig":"43"},{"size":2487,"mtime":1613628034973,"results":"47","hashOfConfig":"43"},{"size":361,"mtime":1612219301001,"results":"48","hashOfConfig":"43"},{"size":7263,"mtime":1613535415668,"results":"49","hashOfConfig":"43"},{"size":1269,"mtime":1613637420899,"results":"50","hashOfConfig":"43"},{"size":3451,"mtime":1612823611057,"results":"51","hashOfConfig":"43"},{"size":2207,"mtime":1612993949593,"results":"52","hashOfConfig":"43"},{"size":3223,"mtime":1613004515086,"results":"53","hashOfConfig":"43"},{"size":5243,"mtime":1613351388962,"results":"54","hashOfConfig":"43"},{"size":3445,"mtime":1613636190086,"results":"55","hashOfConfig":"43"},{"size":1273,"mtime":1613169550486,"results":"56","hashOfConfig":"43"},{"size":3933,"mtime":1613351927278,"results":"57","hashOfConfig":"43"},{"size":851,"mtime":1612231402255,"results":"58","hashOfConfig":"43"},{"size":340,"mtime":1612572771435,"results":"59","hashOfConfig":"43"},{"size":230,"mtime":1612572874147,"results":"60","hashOfConfig":"43"},{"size":1897,"mtime":1613533544973,"results":"61","hashOfConfig":"43"},{"size":382,"mtime":1612992834920,"results":"62","hashOfConfig":"43"},{"size":7500,"mtime":1613353299689,"results":"63","hashOfConfig":"43"},{"size":4794,"mtime":1613628653098,"results":"64","hashOfConfig":"43"},{"size":1235,"mtime":1613082202215,"results":"65","hashOfConfig":"43"},{"size":1331,"mtime":1613529190013,"results":"66","hashOfConfig":"43"},{"size":1503,"mtime":1613351659132,"results":"67","hashOfConfig":"43"},{"size":287,"mtime":1613169371430,"results":"68","hashOfConfig":"43"},{"size":2612,"mtime":1613079949784,"results":"69","hashOfConfig":"43"},{"size":1600,"mtime":1613079850254,"results":"70","hashOfConfig":"43"},{"size":1493,"mtime":1613082316892,"results":"71","hashOfConfig":"43"},{"size":5112,"mtime":1613169277886,"results":"72","hashOfConfig":"43"},{"size":4213,"mtime":1613526506193,"results":"73","hashOfConfig":"43"},{"size":1244,"mtime":1613526412505,"results":"74","hashOfConfig":"43"},{"size":5037,"mtime":1613526719226,"results":"75","hashOfConfig":"43"},{"size":7264,"mtime":1613527716512,"results":"76","hashOfConfig":"43"},{"size":2975,"mtime":1613421317829,"results":"77","hashOfConfig":"43"},{"size":3096,"mtime":1613353457676,"results":"78","hashOfConfig":"43"},{"size":4088,"mtime":1613637888236,"results":"79","hashOfConfig":"43"},{"size":6149,"mtime":1613524324892,"results":"80","hashOfConfig":"43"},{"size":2805,"mtime":1613525983451,"results":"81","hashOfConfig":"43"},{"size":1006,"mtime":1613636370330,"results":"82","hashOfConfig":"43"},{"size":916,"mtime":1613637712972,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"5wie1c",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"86"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/index.js",[],["182","183"],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/App.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/store.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reportWebVitals.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Header.js",["184"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navbar, Nav, Container, Row, NavDropdown } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport SearchBox from './SearchBox'\nimport { logout } from \"../actions/userActions\";\n\nconst Header = () => {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const dispatch = useDispatch();\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <header>\n      <Navbar bg=\"light\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>Ale's Creations</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <SearchBox />\n            <Nav className=\"mr-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i>Cart\n                </Nav.Link>\n              </LinkContainer>\n\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i>Login\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id=\"adminmenu\">\n                  <LinkContainer to=\"/admin/userlist\">\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <LinkContainer to=\"/admin/productlist\">\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <LinkContainer to=\"/admin/orderlist\">\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Footer.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/ProductScreen.js",["185","186"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Button,\n  Card,\n  Form,\n} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport {\n  listProductDetails,\n  createProductReview,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\n\nconst ProductScreen = ({ match, history }) => {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\n  const {\n    loading: loadingProductReview,\n    error: errorProductReview,\n    success: successProductReview,\n  } = productReviewCreate;\n\n  useEffect(() => {\n    if(successProductReview){\n      setRating(0)\n      setComment('')\n      dispatch({type:PRODUCT_CREATE_REVIEW_RESET})\n    }\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match, successProductReview]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(createProductReview(\n      match.params.id, {\n        rating,\n        comment\n      }\n    ))\n  }\nconsole.log(product.numReviews);\n  return (\n    <div>\n      <Link to=\"/\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n\n            <Col md={3}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                    color={\"#f8e825\"}\n                  />\n                </ListGroup.Item>\n\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n\n            <Col md={3}>\n              <ListGroup>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price:</Col>\n                    <Col>\n                      <strong>${product.price}</strong>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status</Col>\n                    <Col>\n                      {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n\n                {product.countInStock > 0 && (\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Qty</Col>\n                      <Col xs=\"auto\" className=\"my-1\">\n                        <Form.Control\n                          as=\"select\"\n                          value={qty}\n                          onChange={(e) => setQty(e.target.value)}\n                        >\n                          {[...Array(product.countInStock).keys()].map((x) => (\n                            <option key={x + 1} value={x + 1}>\n                              {x + 1}\n                            </option>\n                          ))}\n                        </Form.Control>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                )}\n\n                <ListGroup.Item>\n                  <Button\n                    onClick={addToCartHandler}\n                    className=\"btn-block\"\n                    disabled={product.countInStock == 0}\n                    type=\"button\"\n                  >\n                    Add to Cart\n                  </Button>\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n\n            <Col md={3}></Col>\n          </Row>\n\n          <Row>\n            <Col md={6}>\n              <h4>Reviews</h4>\n              {product.reviews.length === 0 && <Message variant=\"info\">Be the first to leave a review!</Message>}\n\n              <ListGroup variant='flush'>\n                  {product.reviews.map((review) => (\n                    <ListGroup.Item key={review._id}>\n                      <strong>{review.name}</strong>\n                      <Rating value={review.rating} color='#f8e825'/>\n                      <p>{review.createdAt.substring(0,10)}</p>\n                      <p>{review.comment}</p>\n                      \n                    </ListGroup.Item>\n                  ))}\n\n                  <ListGroup.Item>\n                    <h4>Leave a review</h4>\n\n                    {loadingProductReview && <Loader />}\n                    {successProductReview && <Message variant=\"success\">Review Submitted</Message>}\n                    {errorProductReview && <Message variant=\"danger\">{errorProductReview}</Message>}\n\n                    {userInfo ? (\n                      <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='rating'>\n                          <Form.Label>Rating</Form.Label>\n                          <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\n                            <option value=''>Select...</option>\n                            <option value='5'>5 - Amazing</option>\n                            <option value='4'>4 - Very Good</option>\n                            <option value='3'>3 - Good</option>\n                            <option value='2'>2 - Fair</option>\n                            <option value='1'>1 - Poor</option>\n                          </Form.Control>\n                        </Form.Group>\n                        <Form.Label>Review</Form.Label>\n                        <Form.Control as='textarea' row='5' value={comment} onChange={(e) => setComment(e.target.value)}>\n\n                        </Form.Control>\n                        <Form.Group controlId='comment'>\n\n                        </Form.Group>\n\n                        <Button disable={loadingProductReview} type='submit' variant='primary'>\n                          Post Review\n                        </Button>\n                      </Form>\n                    ): (\n                      <Message variant='info'>Please <Link to='login'>login</Link> to write a review</Message>\n                    )}\n                  </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProductScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/HomeScreen.js",["187"],"import React, { useState, useEffect } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listProducts } from \"../actions/productActions\";\n\nconst HomeScreen = ({ history }) => {\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { error, loading, products, page, pages } = productList;\n\n  let keyword = history.location.search;\n  useEffect(() => {\n    dispatch(listProducts(keyword));\n  }, [dispatch, keyword]);\n\n  return (\n    <div>\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate page={page} pages={pages} keyword={keyword}/>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HomeScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/CartScreen.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/LoginScreen.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/RegisterScreen.js",["188"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { register } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { error, loading, userInfo } = userRegister;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if(password != confirmPassword) {\n        setMessage('Passwords do not match')\n    } else {\n        dispatch(register(name, email, password));\n    }\n\n  };\n\n  return (\n    <FormContainer>\n      <h1>Register</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n\n      <Form onSubmit={submitHandler}>\n\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            required\n            type=\"name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            required\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            required\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"passwordConfirm\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            required\n            type=\"password\"\n            placeholder=\"Confirm password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n                <Col>\n                    Have an account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Log In</Link>\n                </Col>\n            </Row>\n    </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/ProfileScreen.js",["189","190"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col,Table } from \"react-bootstrap\";\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { listMyOrders } from \"../actions/orderActions\";\n\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\n\nconst ProfileScreen = ({ history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error, loading, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrder, orders } = orderListMy;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || !user.name || success ||  userInfo._id !== user._id ) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(\n        updateUserProfile({\n          id: user._id,\n          name: name,\n          email: email,\n          password: password,\n        })\n      );\n      setMessage(\"\");\n    }\n  };\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {loading && <Loader />}\n\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              required\n              type=\"name\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"passwordConfirm\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrder ? (\n            <Message variant=\"danger\">{errorOrder}</Message>\n          ) : (\n            <Table striped responsive className='table-sm'>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Date</th>\n                  <th>Total</th>\n                  <th>Paid</th>\n                  <th>Delivered</th>\n                </tr>\n              </thead>\n              <tbody>\n                {orders.map(order => (\n                  <tr key={order._id}>\n                    <td>{order._id}</td>\n                    <td>{order.createdAt.substring(0,10)}</td>\n                    <td>${order.totalPrice}</td>\n                    <td>{order.isPaid ? order.paidAt.substring(0,10) : (\n                      <i className='fas fa-times' style={{color: 'red'}}></i>\n                    )}</td>\n                    <td>\n                      <LinkContainer to={`/order/${order._id}`}>\n                        <Button className='btn-sm'>Details</Button>\n                      </LinkContainer>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          )\n        }\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reducers/productReducers.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reducers/cartReducers.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reducers/userReducers.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Product.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Loader.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Message.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Rating.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/FormContainer.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/actions/userActions.js",["191"],"import axios from 'axios'\nimport { \n    USER_LOGIN_REQUEST, \n    USER_LOGIN_SUCCESS, \n    USER_LOGIN_FAIL, \n\n    USER_REGISTER_REQUEST, \n    USER_REGISTER_SUCCESS, \n    USER_REGISTER_FAIL, \n\n    USER_DETAILS_REQUEST, \n    USER_DETAILS_SUCCESS, \n    USER_DETAILS_FAIL, \n    USER_DETAILS_RESET, \n\n    USER_UPDATE_PROFILE_REQUEST, \n    USER_UPDATE_PROFILE_SUCCESS, \n    USER_UPDATE_PROFILE_FAIL, \n    USER_UPDATE_PROFILE_RESET, \n\n    USER_LIST_REQUEST, \n    USER_LIST_SUCCESS, \n    USER_LIST_FAIL, \n    USER_LIST_RESET, \n\n    USER_DELETE_REQUEST, \n    USER_DELETE_SUCCESS, \n    USER_DELETE_FAIL, \n\n    USER_UPDATE_REQUEST, \n    USER_UPDATE_SUCCESS, \n    USER_UPDATE_FAIL, \n\n    USER_LOGOUT, \n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n            )\n\n            dispatch({\n                type: USER_LOGIN_SUCCESS,    \n                payload: data\n            })\n\n            localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error) {\n        dispatch({ \n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n            ? error.response.data.detail : error.message\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET})\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n            )\n\n            dispatch({\n                type: USER_REGISTER_SUCCESS,    \n                payload: data\n            })\n\n            dispatch({\n                type: USER_LOGIN_SUCCESS,    \n                payload: data\n            })\n\n            localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error) {\n        dispatch({ \n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n            ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n            )\n\n            dispatch({\n                type: USER_DETAILS_SUCCESS,    \n                payload: data\n            })\n\n    }catch(error) {\n        dispatch({ \n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n            ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n            )\n\n            dispatch({\n                type: USER_UPDATE_PROFILE_SUCCESS,    \n                payload: data\n            })\n\n            dispatch({\n                type: USER_LOGIN_SUCCESS,    \n                payload: data\n            })\n\n            localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error) {\n        dispatch({ \n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n            ? error.response.data.detail : error.message\n        })\n    }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n            )\n\n            dispatch({\n                type: USER_LIST_SUCCESS,    \n                payload: data\n            })\n\n    }catch(error) {\n        dispatch({ \n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n            ? error.response.data.detail : error.message\n        })\n    }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n            )\n\n            dispatch({\n                type: USER_DELETE_SUCCESS,    \n                payload: data\n            })\n\n    }catch(error) {\n        dispatch({ \n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n            ? error.response.data.detail : error.message\n        })\n    }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n            )\n\n            dispatch({\n                type: USER_UPDATE_SUCCESS,\n            })\n\n            dispatch({\n                type: USER_DETAILS_SUCCESS,\n                payload: data\n            })\n\n    }catch(error) {\n        dispatch({ \n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n            ? error.response.data.detail : error.message\n        })\n    }\n}","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/actions/productActions.js",["192","193","194"],"import axios from \"axios\";\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n\n} from \"../constants/productConstants\";\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n\n    const { data } = await axios.get(`/api/products${keyword}`);\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/products/delete/${id}`, config);\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/products/create/`, {}, config);\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/products/update/${product._id}/`,\n      product,\n      config\n    );\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n        type: PRODUCT_DETAILS_SUCCESS, \n        payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/actions/cartActions.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/constants/productConstants.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/constants/userConstants.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/constants/cartConstants.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/ShippingScreen.js",["195"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const dispatch = useDispatch()\n \n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  \n\n  const submitHandler = (e) => {\n      e.preventDefault();\n      dispatch(saveShippingAddress({ address, city, postalCode, country }))\n      history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2/>\n      <Form onSubmit={submitHandler}>\n        <h1>Shipping</h1>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter address\"\n            value={address ? address : '' }\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter city\"\n            value={city ? city : '' }\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"postalCode\">\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter postal code\"\n            value={postalCode ? postalCode : '' }\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter country\"\n            value={country ? country : '' }\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n\n        <Button type='submit' variant='primary'>\n            Continue\n        </Button>\n\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ShippingScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/CheckoutSteps.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/PaymentScreen.js",["196"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const dispatch = useDispatch();\n\n  const [paymentMethod, setPaymentMethod] = useState(\"Paypal\");\n\n  if (!shippingAddress.address) {\n    history.push(\"/shipping\");\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n        <Form onSubmit={submitHandler}>\n          <Form.Group>\n            <Form.Label as=\"legend\">Select Method</Form.Label>\n\n            <Col>\n              <Form.Check\n                type=\"radio\"\n                label=\"Paypal or Credit Card\"\n                id=\"paypal\"\n                name=\"paymentMethod\"\n                checked\n                onChange={(e) => setPaymentMethod(e.target.value)}\n              ></Form.Check>\n            </Col>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Continue\n          </Button>\n        </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/PlaceOrderScreen.js",["197","198"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { createOrder } from \"../actions/orderActions\";\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, error, success } = orderCreate;\n\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n\n  cart.itemsPrice = cart.cartItems\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\n    .toFixed(2);\n  cart.shippingPrice = cart.itemsPrice > 30 ? 0 : 5.99;\n  cart.taxPrice = Number(0.1 * cart.itemsPrice).toFixed(2);\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2);\n  \n  if(!cart.paymentMethod){\n    history.push('/payment')\n  }\n\n  useEffect(() => {\n      if(success) {\n          history.push(`/order/${order._id}`)\n          dispatch({ type: ORDER_CREATE_RESET })\n      }\n  }, [success, history])\n\n  const placeOrder = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Shipping: </strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}\n                {\"   \"}\n                {cart.shippingAddress.postalCode},{\"   \"}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {cart.paymentMethod}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message variant=\"info\">Your cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={2}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col md={2}>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} X ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup.Item variant=\"flush\">\n              <h2>Order Summary</h2>\n            </ListGroup.Item>\n\n            <ListGroup.Item variant=\"flush\">\n              <Row>\n                <Col>Items:</Col>\n                <Col>${cart.itemsPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item variant=\"flush\">\n              <Row>\n                <Col>Shipping:</Col>\n                <Col>${cart.shippingPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item variant=\"flush\">\n              <Row>\n                <Col>Tax:</Col>\n                <Col>${cart.taxPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item variant=\"flush\">\n              <Row>\n                <Col>Total:</Col>\n                <Col>${cart.totalPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <Button\n                type=\"submit\"\n                className=\"btn-block\"\n                disable={cart.cartItems === 0}\n                onClick={placeOrder}\n              >\n                Place Order\n              </Button>\n            </ListGroup.Item>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default PlaceOrderScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/reducers/orderReducers.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/constants/orderConstants.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/actions/orderActions.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/OrderScreen.js",["199"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from \"../actions/orderActions\";\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderConstants\";\n\nfunction OrderScreen({ match, history }) {\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, error, loading } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  if (!loading && !error) {\n    order.itemsPrice = order.orderItems\n      .reduce((acc, item) => acc + item.price * item.qty, 0)\n      .toFixed(2);\n  }\n\n  const addPayPalScript = () => {\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src =\n      \"https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn\";\n    script.async = true;\n    script.onload = () => {\n      setSdkReady(true);\n    };\n    document.body.appendChild(script);\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n\n    if (\n      !order ||\n      successPay ||\n      order._id !== Number(orderId) ||\n      successDeliver\n    ) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, order, orderId, successPay, successDeliver]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <div>\n      <h1>Order: {order.Id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Shipping: </strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}\n                {\"  \"}\n                {order.shippingAddress.postalCode},{\"  \"}\n                {order.shippingAddress.country}\n              </p>\n\n              {order.isDelivered ? (\n                <Message variant=\"success\">\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant=\"warning\">Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant=\"warning\">Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message variant=\"info\">Order is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} X ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items:</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping:</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax:</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total:</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n            {loadingDeliver && <Loader />}\n            {userInfo &&\n              userInfo.isAdmin &&\n              order.isPaid &&\n              !order.isDelivered && (\n                <ListGroup.Item>\n                  <Button\n                    type=\"button\"\n                    className=\"btn btn-block\"\n                    onClick={deliverHandler}\n                  >\n                    Mark As Delivered\n                  </Button>\n                </ListGroup.Item>\n              )}\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default OrderScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/UserListScreen.js",["200"],"import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { listUsers, deleteUser } from \"../actions/userActions\";\n\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n  \n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n      if(userInfo && userInfo.isAdmin){\n          dispatch(listUsers());\n      } else{\n          history.push('/login')\n      }\n  }, [dispatch, history, successDelete, userInfo]);\n\n  const deleteHandler = (id) => {\n      if(window.confirm('Are you sure you want to delete this user?')){\n          dispatch(deleteUser(id))\n      }\n  }\n\n  return (\n    <div>\n      <h1>Users</h1>\n      {loading \n        ? (<Loader />) \n        : error \n            ? ( <Message variant=\"danger\">{error}</Message> ) \n            : (\n                <Table striped bordered hover responsive className=\"table-sm\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>NAME</th>\n                        <th>EMAIL</th>\n                        <th>ADMIN</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {users.map(user => (\n                        <tr key={user._id}>\n                            <td>{user._id}</td>\n                            <td>{user.name}</td>\n                            <td>{user.email}</td>\n                            <td>{user.isAdmin ?  (\n                                <i className='fas fa-check' style={{color: 'green'}}/>\n                            ) : (\n                                <i className='fas fa-check'/>\n                            )}</td>\n\n                            <td>\n                                <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                    <Button variant='light' className='btn btn-sm'>\n                                    <i className='fas fa-edit'/>\n                                    </Button>\n                                </LinkContainer>\n\n                                <Button variant='danger' className='btn btn-sm' onClick={ ()=> deleteHandler(user._id)}>\n                                    <i className='fas fa-trash'/>\n                                </Button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n                </Table>\n      )}\n    </div>\n  );\n};\n\nexport default UserListScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/UserEditScreen.js",["201","202","203"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error, loading, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist\");\n    } else {\n      if (!user.name || user._id !== Number(userId)) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [userId, user, ]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n  };\n\n  return (\n    <div>\n      <Link to=\"/admin/userlist\">Go Back</Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{error}</Message>}\n\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"isadmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </div>\n  );\n};\n\nexport default UserEditScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/ProductListScreen.js",["204"],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/ProductEditScreen.js",["205"],"import React, { useState, useEffect } from \"react\"\nimport axios from 'axios'\nimport { Link } from \"react-router-dom\"\nimport { Form, Button } from \"react-bootstrap\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Loader from \"../components/Loader\"\nimport Message from \"../components/Message\"\nimport FormContainer from \"../components/FormContainer\"\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\"\n\nconst ProductEditScreen = ({ match, history }) => {\n\n  const productId = match.params.id\n\n  const [name, setName] = useState(\"\")\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { error, loading, product } = productDetails;\n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate,\n  } = productUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n            if (!product.name || product._id !== Number(productId)) {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                setBrand(product.brand)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n\n            }\n        }\n\n\n\n    }, [dispatch, product, productId, history, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        countInStock,\n        description,\n    }))\n  };\n\n  const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('product_id', productId)\n\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/products/upload/', formData, config)\n\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            setUploading(false)\n        }\n    }\n\n  return (\n    <div>\n      <Link to=\"/admin/productlist\">Go Back</Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter image\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              >  \n              </Form.Control>\n\n              <Form.File \n                id='image-file' \n                label='Choose File'\n                custom\n                onChange={uploadFileHandler}\n              >\n\n              </Form.File>\n              \n\n            </Form.Group>\n\n            <Form.Group controlId=\"brand\">\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter brand\"\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"countinstock\">\n              <Form.Label>Stock</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter stock\"\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </div>\n  );\n};\n\nexport default ProductEditScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/screens/OrderListScreen.js",["206"],"import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { listOrders } from \"../actions/orderActions\";\n\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n  \n  const orderList = useSelector((state) => state.orderList);\n  const { loading, error, orders } = orderList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n      if(userInfo && userInfo.isAdmin){\n          dispatch(listOrders());\n      } else{\n          history.push('/login')\n      }\n  }, [dispatch, history, userInfo]);\n\n\n  return (\n    <div>\n      <h1>Orders</h1>\n      {loading \n        ? (<Loader />) \n        : error \n            ? ( <Message variant=\"danger\">{error}</Message> ) \n            : (\n                <Table striped bordered hover responsive className=\"table-sm\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>USER</th>\n                        <th>DATE</th>\n                        <th>PAID</th>\n                        <th>DELIVERED</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {orders.map(order => (\n                        <tr key={order._id}>\n                            <td>{order._id}</td>\n                            <td>{order.user && order.user.name}</td>\n                            <td>{order.createdAt.substring(0,10)}</td>\n                            <td>{order.totalPrice}</td>\n\n                            <td>{order.isPaid ?  (\n                                order.paidAt.substring(0,10)\n                            ) : (\n                                <i className='fas fa-times'/>\n                            )}</td>\n\n                            <td>{order.isDelivered ?  (\n                                order.deliveredAt.substring(0,10)\n                            ) : (\n                                <i className='fas fa-times'/>\n                            )}</td>\n\n                            <td>\n                                <LinkContainer to={`/order/${order._id}`}>\n                                    <Button variant='light' className='btn btn-sm'>\n                                    Details\n                                    </Button>\n                                </LinkContainer>\n\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n                </Table>\n      )}\n    </div>\n  );\n};\n\nexport default OrderListScreen;\n","/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/SearchBox.js",[],"/Users/angelsworkstation/Desktop/ecommerce/backend/frontend/src/components/Paginate.js",[],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":3,"column":34,"nodeType":"213","messageId":"214","endLine":3,"endColumn":37},{"ruleId":"211","severity":1,"message":"215","line":10,"column":3,"nodeType":"213","messageId":"214","endLine":10,"endColumn":7},{"ruleId":"216","severity":1,"message":"217","line":148,"column":52,"nodeType":"218","messageId":"219","endLine":148,"endColumn":54},{"ruleId":"211","severity":1,"message":"220","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"221","line":33,"column":17,"nodeType":"218","messageId":"219","endLine":33,"endColumn":19},{"ruleId":"211","severity":1,"message":"222","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":14},{"ruleId":"216","severity":1,"message":"221","line":52,"column":18,"nodeType":"218","messageId":"219","endLine":52,"endColumn":20},{"ruleId":"211","severity":1,"message":"223","line":19,"column":5,"nodeType":"213","messageId":"214","endLine":19,"endColumn":30},{"ruleId":"211","severity":1,"message":"224","line":15,"column":3,"nodeType":"213","messageId":"214","endLine":15,"endColumn":23},{"ruleId":"211","severity":1,"message":"225","line":19,"column":3,"nodeType":"213","messageId":"214","endLine":19,"endColumn":23},{"ruleId":"211","severity":1,"message":"226","line":85,"column":13,"nodeType":"213","messageId":"214","endLine":85,"endColumn":17},{"ruleId":"211","severity":1,"message":"227","line":1,"column":27,"nodeType":"213","messageId":"214","endLine":1,"endColumn":36},{"ruleId":"211","severity":1,"message":"227","line":1,"column":27,"nodeType":"213","messageId":"214","endLine":1,"endColumn":36},{"ruleId":"211","severity":1,"message":"220","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"228","severity":1,"message":"229","line":37,"column":6,"nodeType":"230","endLine":37,"endColumn":24,"suggestions":"231"},{"ruleId":"228","severity":1,"message":"232","line":76,"column":6,"nodeType":"230","endLine":76,"endColumn":60,"suggestions":"233"},{"ruleId":"211","severity":1,"message":"220","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"212","line":3,"column":24,"nodeType":"213","messageId":"214","endLine":3,"endColumn":27},{"ruleId":"211","severity":1,"message":"234","line":3,"column":29,"nodeType":"213","messageId":"214","endLine":3,"endColumn":32},{"ruleId":"228","severity":1,"message":"235","line":43,"column":6,"nodeType":"230","endLine":43,"endColumn":22,"suggestions":"236"},{"ruleId":"211","severity":1,"message":"220","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"237","line":23,"column":10,"nodeType":"213","messageId":"214","endLine":23,"endColumn":19},{"ruleId":"211","severity":1,"message":"220","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","Expected '!==' and instead saw '!='.","'Link' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'PRODUCT_CREATE_RESET' is defined but never used.","'PRODUCT_UPDATE_RESET' is defined but never used.","'data' is assigned a value but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["240"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["241"],"'Col' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'successUpdate'. Either include them or remove the dependency array.",["242"],"'uploading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"249","text":"250"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"251","text":"252"},"Update the dependencies array to be: [userId, user, successUpdate, dispatch, history]",{"range":"253","text":"254"},[1259,1277],"[success, history, order._id, dispatch]",[2223,2277],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[1388,1404],"[userId, user, successUpdate, dispatch, history]"]